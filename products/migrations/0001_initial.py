# Generated by Django 4.0.3 on 2022-03-15 23:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0004_alter_taggeditem_content_type_alter_taggeditem_tag'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=400, unique=True)),
                ('is_public', models.BooleanField(default=True)),
                ('added_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Catégorie',
                'verbose_name_plural': 'Catégorie',
                'ordering': ['name', 'added_on'],
            },
        ),
        migrations.CreateModel(
            name='Soap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name="Nom de l'article")),
                ('subtitle', models.CharField(blank=True, max_length=255, null=True, verbose_name="Sous-titre de l'article")),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('description', models.TextField(verbose_name="Description de l'article")),
                ('picture', models.ImageField(help_text="Photo/image de l'article à ajouter", upload_to='images/products/%Y/%m/', verbose_name='Image principale')),
                ('picture_2', models.ImageField(blank=True, help_text="2e photo/image de l'article à ajouter si besoin", null=True, upload_to='images/products/secondaire/%Y/%m/', verbose_name='Deuxième image')),
                ('picture_3', models.ImageField(blank=True, help_text="3e photo/image de l'article à ajouter si besoin", null=True, upload_to='images/products/tertiaire/%Y/%m/', verbose_name='Troisième image')),
                ('price', models.PositiveIntegerField(help_text='Ne pas inclure la monaie (FCFA)', verbose_name="Prix de l'article")),
                ('discount_price', models.PositiveIntegerField(blank=True, help_text='Doit être inférieur au prix normal', null=True, verbose_name='Prix de réduction (rabais)')),
                ('type', models.CharField(blank=True, choices=[('all', 'Tout'), ('women', 'Femmes'), ('men', 'Hommes'), ('children', 'Enfants')], default='all', max_length=12, null=True, verbose_name='Type de personne')),
                ('shipping_duration', models.IntegerField(default=1, verbose_name='Délai de livraison (Jours)')),
                ('is_popular', models.BooleanField(default=False, verbose_name='Populaire ?')),
                ('is_available', models.CharField(choices=[('En rupture de stock', 'En rupture de stock'), ('Disponible', 'Disponible')], default='Disponible', max_length=20, verbose_name='Disponibilité')),
                ('is_public', models.BooleanField(default=True, verbose_name='Visible par le public ?')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Supprimé ?')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name="Date d'ajout")),
                ('update_date', models.DateTimeField(blank=True, null=True, verbose_name='Date de la dernière modification')),
                ('delete_date', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('recover_date', models.DateTimeField(blank=True, null=True, verbose_name='Date de restauration')),
                ('full_description', models.TextField(blank=True, help_text='Pas du tout obligatoire', null=True, verbose_name='Description extremement détaillée')),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Ajouter par')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='products.category', verbose_name="Catégorie de l'article")),
                ('last_update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Dernièrement modifié par')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
                'ordering': ['price', 'is_popular', 'is_public', 'date'],
            },
        ),
    ]
